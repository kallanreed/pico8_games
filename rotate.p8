pico-8 cartridge // http://www.pico-8.com
version 33
__lua__

function _init()
	a=0
end

function _update()
 --a=(a+1)%360
 if (btn(⬅️)) a=(a+1)%360
 if (btn(➡️)) a=(a-1)%360
end

function rotate(x,y,cx,cy,a)
 ca=cos(a/360) sa=sin(a/360)
 x-=cx y-=cy
 local rx=x*ca-y*sa
 local ry=x*sa+y*ca
 return rx+cx,ry+cy
end

function draw_shape(points)
 for i=2,#points do
  local cx,cy=64,64
  local p1=points[i-1]
  local p2=points[i]
  local x1,y1=rotate(
   p1[1],p1[2],cx,cy,a)
  local x2,y2=rotate(
   p2[1],p2[2],cx,cy,a)
  line(x1,y1,x2,y2,7)
 end
end

function _draw()
 cls()
 
 --tline(x1-ay,y1-ax,x2-ay,y2-ax,
 -- 1+(7/8),0,-.125)
 --tline(x1,y1,x2,y2,1,0)
 --tline(x1+ay,y1+ax,x2+ay,y2+ax,
 -- 1+(7/8),0,-.125)
 
 draw_shape({
  {72,64},{64,72},{56,64},
  {64,56},{72,64},{64,64},
  {80,48}
 })
 
 local x1,y1,x2,y2=48,120,48,112
 local cols={6,6,7,7,13}
 
 for i=1,#cols do
  local ox=(i-3)/2
  local rx1,ry1=rotate(x1+ox,y1,x1,y1,a)
  local rx2,ry2=rotate(x2+ox,y2,x1,y1,a) line(rx1,ry1,rx2,ry2,7)
  line(rx1,ry1,rx2,ry2,cols[i])
 end

 
 print(ca..","..sa.." "..a)
end
__gfx__
000000008888888889abc12e00aaaa00666666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000009999999989abc12e0aaaaaa0777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aaaaaaaa89abc12eaa0aa0aadddddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000bbbbbbbb89abc12eaaaaaaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000cccccccc89abc12eaaaaaaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007001111111189abc12eaa0aa0aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000dddddddd89abc12e0aa00aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeee89abc12e00aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0102030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
